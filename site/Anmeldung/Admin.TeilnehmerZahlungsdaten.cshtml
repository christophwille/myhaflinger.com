@using MyHaflinger.Anmeldung.Data
@using MyHaflinger.Anmeldung
@{
    Page.Title = "Zahlungsinformationen";
    Layout = "~/Shared/_Layout.Anmeldung.cshtml";
}
@{
    AdminPanel.RequireSsl();
    AdminPanel.RequireAuthNKassierAuthZ(User);

    Validation.Add("inputPaymentAmount",
        Validator.Required("Zahlungsbetrag muß angegeben sein"),
        Validator.Decimal(),
        Validator.Range(0, 1000, "0 bis 1000 erlaubt")
    );

    string tlnrId = Request.QueryString["id"];
    var ctx = DbFactory.CreateContext(this.Server);
    var reg = ctx.GetRegisteredParticipant(Convert.ToInt32(tlnrId));

    string inputPaymentAmount = Request.Form["inputPaymentAmount"];
    string inputPaymentDate = Request.Form["inputPaymentDate"];
    string inputNotes = Request.Form["inputNotes"];

    if (!IsPost)
    {
        inputPaymentAmount = reg.IntPaymentReceivedAmount.ToString();
        inputPaymentDate = reg.IntPaymentReceivedDate;
        inputNotes = reg.IntPaymentNotes;
    }

    if (IsPost && Validation.IsValid())
    {
        double dPaymentAmount = Convert.ToDouble(inputPaymentAmount);

        reg.IntPaymentReceivedAmount = dPaymentAmount;
        reg.IntPaymentReceivedDate = inputPaymentDate;
        reg.IntPaymentNotes = inputNotes;

        string modMessage = $"{User.Identity.Name} hat um {DateTime.UtcNow} Zahlungsinfos verändert\r\n";
        reg.IntModificationLog = modMessage + reg.IntModificationLog;

        ctx.UpdateRegisteredParticipant(reg);
        Response.Redirect("Admin.Teilnehmer.cshtml");
    }
}

<div class="row">
    <div class="col-md-10">
        <h1>Zahlungsinfos für @reg.Name (EUR @reg.TotalPrice)</h1>
    </div>
</div>

<div class="row">
    <div class="col-md-10">
        <form class="form-horizontal" method="post">
            <div class="form-group">
                <label for="inputPaymentAmount" class="col-sm-2 control-label">Erhaltener Zahlungsbetrag</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="inputPaymentAmount" name="inputPaymentAmount" value="@inputPaymentAmount">
                    @Html.ValidationMessage("inputPaymentAmount")
                </div>
            </div>
            <div class="form-group">
                <label for="inputPaymentDate" class="col-sm-2 control-label">Zahlungsdatum</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="inputPaymentDate" name="inputPaymentDate" value="@inputPaymentDate">
                    @Html.ValidationMessage("inputPaymentDate")
                </div>
            </div>
            <div class="form-group">
                <label for="inputNotes" class="col-sm-2 control-label">Interne Bemerkungen zu Zahlung</label>
                <div class="col-sm-10">
                    <textarea class="form-control" rows="3" id="inputNotes" name="inputNotes">@inputNotes</textarea>
                    @Html.ValidationMessage("inputNotes")
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-default">Speichern</button>
                </div>
            </div>
        </form>
    </div>
</div>

