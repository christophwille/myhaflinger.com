@{
    Page.Title = "Anmeldung: Validierung der Emailadresse";
    Layout = "~/Shared/_Layout.Anmeldung.cshtml";
}
@using MyHaflinger.Anmeldung.Data
@{
    Validation.RequireField("emailaddress", "Emailadresse muß eingegeben werden");
    Validation.Add("emailaddress",
            Validator.Regex(@"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$",
            "Ungültiges Format für die Emailadresse"));


    if (IsPost)
    {
        if (Validation.IsValid())
        {
            string email = Request.Form["emailaddress"];
            string guid = Guid.NewGuid().ToString();

            var ctx = DbFactory.CreateContext(this.Server);
            ctx.RegisterEmailChallenge(email, guid, DateTime.UtcNow);

            bool mailSentOK = MyHaflinger.MailManager.SendStep1Mail($"http://myhaflinger.com/Anmeldung/Formular?token={guid}", email);

            var logger = NLog.LogManager.GetLogger("RegistrierungsTrace");
            logger.Trace("Email {0} registered for challenge", email);

            // TODO: write feedback info to user
        }
    }
}

<div class="row">
    <div class="col-md-4">
        <form method="post" class="form-inline">
            @Html.ValidationSummary()
            <div class="form-group">
                <label for="emailaddress">Emailadresse: </label>
                <input type="email" class="form-control" id="emailaddress" placeholder="adresse@beispiel.com"
                       name="emailaddress"
                       value="@Request["emailaddress"]" />
                @Html.ValidationMessage("emailaddress")
            </div>
            <button type="submit" class="btn btn-default">Abschicken</button>
        </form>
    </div>
</div>

